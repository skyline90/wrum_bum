-- Создание схемы
CREATE SCHEMA car_shop;

/*
	для нормализации создам 3и отдельных таблицы, машины, покупатели, продажи
*/

-- создание таблицы покупатели
CREATE TABLE car_shop.customers (
    id SERIAL PRIMARY KEY, -- SERIAL автоматически создаёт последовательность чисел для каждого нового клиента, что удобно для уникальной идентификации каждой записи.
    person_name TEXT, -- Тип данных TEXT выбран, так как имена могут иметь разную длину, и тип TEXT позволяет хранить строки любой длины без необходимости указывать максимальный размер
    phone TEXT -- Тип данных TEXT выбран, так как номера могут содержать не только цифры, но и символы (например, +, -, x для добавочных номеров)
);

-- создание таблицы машины
CREATE TABLE car_shop.cars (
    id SERIAL PRIMARY KEY, -- выбран тип данных SERIAL используется для автоматической генерации уникальных идентификаторов для каждой записи. Это удобный способ гарантировать уникальность каждой строки в таблице.
    auto TEXT NOT NULL, -- выбран TEXT позволяет не ограничивать длину строки. Ограничение NOT NULL означает, что поле обязательно должно быть заполнено, так как автомобиль без названия не имеет смысла.
    color TEXT, -- выбрано поле color использует тип TEXT, так как цвет автомобиля может быть любым текстовым значением, включая названия цветов или их комбинации 
    gasoline_consumption REAL, -- выбран REAL используется для представления чисел с плавающей запятой и подходит для случаев, когда требуется точность с дробными значениями.
    brand_origin TEXT -- выюроан Тип данных TEXT используется для хранения страны происхождения бренда, так как это строковое значение, и страны могут быть разной длины
);

-- создание таблицы с продажами
CREATE TABLE car_shop.sales (
    id SERIAL PRIMARY KEY, -- выбран Тип данных SERIAL автоматически создаёт уникальные идентификаторы для каждой записи в таблице. Это гарантирует, что каждая продажа будет иметь уникальный идентификатор, и упрощает управление данными.
    car_id INT REFERENCES car_shop.cars(id),  -- выбран тип данных INT используется для хранения идентификатора автомобиля, так как поле id в таблице cars тоже имеет тип INT(SERIAL)
    customer_id INT REFERENCES car_shop.customers(id),  -- тип данных INT используется для хранения идентификатора клиента, так как поле id в таблице customers также имеет тип INT(SERIAL)
    price DECIMAL(9, 2) NOT NULL,  -- выбран ип данных DECIMAL(9, 2) используется для хранения цены продажи. Этот тип данных позволяет хранить денежные значения с высокой точностью, также по условию мы не будем иметь сделки с машинами дороже 7 значного числа и 2 чисола после запятой
    discount INTEGER, -- выбран тип данных INTEGER используется для хранения размера скидки, которая представляется целым числом
    date DATE NOT NULL  -- выбран тип данных DATE используется для хранения даты продажи
);